#!/bin/bash

sleep 1

#source /usr/bin/rhcsh

isCronOption() 
{
        local e
        for e in "${CRON_POSSIBILITIES[@]}"; do
                if [[ "$1" == "$e" ]]; then
                        return 1
                fi
        done
        return 0
}

createLogFile()
{
        if [[ ! -f $1 ]]; then
                mkdir -p $1
                rm -r $1
                touch $1
                echo "Log file $log was not existing, is now created"
        fi
}

APP_REPO=~/app-root/runtime/repo/
MODULES_REPO=$APP_REPO/modules/

LOG_REPO=~/app-root/logs/
CRON_LOG=$LOG_REPO/cron.log

INIT_PATH=$APP_REPO/back/init.js

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

createLogFile $CRON_LOG

CRON_POSSIBILITIES=("--minutely" "--fiveminutely" "--hourly" "--daily")

exec >> $CRON_LOG
exec 2>&1

echo
echo "###########################"
echo "#          CRON           #"
echo "###########################"
echo
echo "Time : $(date -R)"
echo
echo -n "User : "
whoami
echo
echo -n "Path : "
pwd

i=0
echo
echo "Reading ./config file..."
while read line; do
	j=0
	for param in $line; do
		if [[ $param != "#" ]]; then
			params[$j]=$param
			let j=j+1
		fi
	done

	if [[ ! -d $MODULES_REPO/${params[0]} ]]; then
		echo "Module {{${params[0]}}} does not exist"
		echo "Aborting"
		exit 1
	fi

	isCronOption ${params[1]}
	if [[ $? -eq 0 ]]; then
		echo "Cron option ${params[1]} is not avaiable"
		echo "Aborting"
		exit 1
	fi

	modules[$i]=${params[0]}
	crony[$i]=${params[1]}
	logs[$i]=${params[2]}

	let i=i+1
	echo
	echo " Line $i :"
	let i=i-1

	echo " |- Module : ${modules[$i]}"
	echo " |- Cron : ${crony[$i]}"
	echo " \_ Log path : ${logs[$i]}"
	
	echo
	let i=i+1
done < $DIR/config
echo "Read ./config file successfully"
echo 

echo "Preparing log files..."
for log in ${logs[@]}; do
	createLogFile $LOG_REPO/$log
	chmod +w $LOG_REPO/$log
done
echo "Log files are ready"
echo

k=0
echo "Calling modules independantly..."
echo
while [[ k -lt i ]]; do
	if [[ ${crony[$k]} == ${CRON_POSSIBILITIES[0]} ]]; then 
		# --minutely
		node $INIT_PATH ${modules[$k]} >> $LOG_REPO/${logs[$k]} &
	elif [[ ${crony[$k]} == ${CRON_POSSIBILITIES[1]} ]]; then
		if [[ $(date +%M) == *0 ]] || [[ $(date +%M) == *5 ]]; then
			# --fiveminutely
			node $INIT_PATH ${modules[$k]} >> $LOG_REPO/${logs[$k]} &
		fi
	elif [[ ${crony[$k]} == ${CRON_POSSIBILITIES[2]} ]]; then 
		if [[ $(date +%M) -eq 0 ]]; then
			# --hourly
			node $INIT_PATH ${modules[$k]} >> $LOG_REPO/${logs[$k]} &
		fi
	elif [[ ${crony[$k]} == ${CRON_POSSIBILITIES[3]} ]]; then
		if [[ $(date +%H) -eq 0 ]] && [[ $(date +%M) -eq 0 ]]; then
			# --daily
			node $INIT_PATH ${modules[$k]} >> $LOG_REPO/${logs[$k]} &
		fi
	fi
	let k=k+1
done

echo
echo "Cron done"
echo "___________________"

sleep 1
